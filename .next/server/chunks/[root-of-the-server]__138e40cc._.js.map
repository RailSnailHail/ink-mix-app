{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///home/jim/ink-mix-app/src/app/api/inks/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { PrismaClient } from '@prisma/client';\n\nconst prisma = new PrismaClient();\n\nexport async function GET(request: NextRequest) {\n  try {\n    const searchParams = request.nextUrl.searchParams;\n    const showDeleted = searchParams.get('deleted') === 'true';\n    const inStockOnly = searchParams.get('inStock') === 'true';\n\n    let whereClause: any = { isDeleted: showDeleted };\n    if (inStockOnly) {\n      whereClause.stockG = { gt: 0 };\n    }\n\n    const inks = await prisma.ink.findMany({\n      where: whereClause,\n      orderBy: { name: 'asc' },\n    });\n    return NextResponse.json(inks);\n  } catch (error) {\n    return NextResponse.json({ error: 'Failed to fetch inks.' }, { status: 500 });\n  }\n}\n\nexport async function POST(request: Request) {\n  try {\n    const body = await request.json();\n    const { name, shade, colorHex, stockG } = body;\n    const stockGNumber = parseFloat(stockG);\n    const newInk = await prisma.ink.create({\n      data: { name, shade, colorHex, stockG: stockGNumber },\n    });\n    return NextResponse.json(newInk, { status: 201 });\n  } catch (error) {\n    return NextResponse.json({ error: 'Failed to create ink.' }, { status: 500 });\n  }\n}"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEA,MAAM,SAAS,IAAI,6HAAA,CAAA,eAAY;AAExB,eAAe,IAAI,OAAoB;IAC5C,IAAI;QACF,MAAM,eAAe,QAAQ,OAAO,CAAC,YAAY;QACjD,MAAM,cAAc,aAAa,GAAG,CAAC,eAAe;QACpD,MAAM,cAAc,aAAa,GAAG,CAAC,eAAe;QAEpD,IAAI,cAAmB;YAAE,WAAW;QAAY;QAChD,IAAI,aAAa;YACf,YAAY,MAAM,GAAG;gBAAE,IAAI;YAAE;QAC/B;QAEA,MAAM,OAAO,MAAM,OAAO,GAAG,CAAC,QAAQ,CAAC;YACrC,OAAO;YACP,SAAS;gBAAE,MAAM;YAAM;QACzB;QACA,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAwB,GAAG;YAAE,QAAQ;QAAI;IAC7E;AACF;AAEO,eAAe,KAAK,OAAgB;IACzC,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,GAAG;QAC1C,MAAM,eAAe,WAAW;QAChC,MAAM,SAAS,MAAM,OAAO,GAAG,CAAC,MAAM,CAAC;YACrC,MAAM;gBAAE;gBAAM;gBAAO;gBAAU,QAAQ;YAAa;QACtD;QACA,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CAAC,QAAQ;YAAE,QAAQ;QAAI;IACjD,EAAE,OAAO,OAAO;QACd,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAwB,GAAG;YAAE,QAAQ;QAAI;IAC7E;AACF","debugId":null}}]
}